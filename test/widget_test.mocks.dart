// Mocks generated by Mockito 5.3.2 from annotations
// in todo_app/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:functions_client/functions_client.dart' as _i5;
import 'package:gotrue/gotrue.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:postgrest/postgrest.dart' as _i4;
import 'package:realtime_client/realtime_client.dart' as _i3;
import 'package:storage_client/storage_client.dart' as _i6;
import 'package:supabase/src/supabase_client.dart' as _i8;
import 'package:supabase/src/supabase_query_builder.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoTrueClient_0 extends _i1.SmartFake implements _i2.GoTrueClient {
  _FakeGoTrueClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_1 extends _i1.SmartFake
    implements _i3.RealtimeClient {
  _FakeRealtimeClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_2 extends _i1.SmartFake
    implements _i4.PostgrestClient {
  _FakePostgrestClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctionsClient_3 extends _i1.SmartFake
    implements _i5.FunctionsClient {
  _FakeFunctionsClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_4 extends _i1.SmartFake
    implements _i6.SupabaseStorageClient {
  _FakeSupabaseStorageClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_5 extends _i1.SmartFake
    implements _i7.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_6<T> extends _i1.SmartFake
    implements _i4.PostgrestFilterBuilder<T> {
  _FakePostgrestFilterBuilder_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_7 extends _i1.SmartFake
    implements _i3.RealtimeChannel {
  _FakeRealtimeChannel_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueAdminApi_8 extends _i1.SmartFake
    implements _i2.GoTrueAdminApi {
  _FakeGoTrueAdminApi_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueMFAApi_9 extends _i1.SmartFake implements _i2.GoTrueMFAApi {
  _FakeGoTrueMFAApi_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponse_10 extends _i1.SmartFake implements _i2.AuthResponse {
  _FakeAuthResponse_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOAuthResponse_11 extends _i1.SmartFake implements _i2.OAuthResponse {
  _FakeOAuthResponse_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserResponse_12 extends _i1.SmartFake implements _i2.UserResponse {
  _FakeUserResponse_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthSessionUrlResponse_13 extends _i1.SmartFake
    implements _i2.AuthSessionUrlResponse {
  _FakeAuthSessionUrlResponse_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i8.SupabaseClient {
  @override
  String get supabaseUrl => (super.noSuchMethod(
        Invocation.getter(#supabaseUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get supabaseKey => (super.noSuchMethod(
        Invocation.getter(#supabaseKey),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get schema => (super.noSuchMethod(
        Invocation.getter(#schema),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get restUrl => (super.noSuchMethod(
        Invocation.getter(#restUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get realtimeUrl => (super.noSuchMethod(
        Invocation.getter(#realtimeUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get authUrl => (super.noSuchMethod(
        Invocation.getter(#authUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get storageUrl => (super.noSuchMethod(
        Invocation.getter(#storageUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  String get functionsUrl => (super.noSuchMethod(
        Invocation.getter(#functionsUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i2.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_0(
          this,
          Invocation.getter(#auth),
        ),
        returnValueForMissingStub: _FakeGoTrueClient_0(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i2.GoTrueClient);
  @override
  set auth(_i2.GoTrueClient? _auth) => super.noSuchMethod(
        Invocation.setter(
          #auth,
          _auth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_1(
          this,
          Invocation.getter(#realtime),
        ),
        returnValueForMissingStub: _FakeRealtimeClient_1(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i3.RealtimeClient);
  @override
  set realtime(_i3.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_2(
          this,
          Invocation.getter(#rest),
        ),
        returnValueForMissingStub: _FakePostgrestClient_2(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i4.PostgrestClient);
  @override
  set rest(_i4.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_3(
          this,
          Invocation.getter(#functions),
        ),
        returnValueForMissingStub: _FakeFunctionsClient_3(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i5.FunctionsClient);
  @override
  _i6.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_4(
          this,
          Invocation.getter(#storage),
        ),
        returnValueForMissingStub: _FakeSupabaseStorageClient_4(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SupabaseStorageClient);
  @override
  _i7.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeSupabaseQueryBuilder_5(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i7.SupabaseQueryBuilder);
  @override
  _i4.PostgrestFilterBuilder<dynamic> rpc(
    String? fn, {
    Map<String, dynamic>? params,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {#params: params},
        ),
        returnValue: _FakePostgrestFilterBuilder_6<dynamic>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {#params: params},
          ),
        ),
        returnValueForMissingStub: _FakePostgrestFilterBuilder_6<dynamic>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {#params: params},
          ),
        ),
      ) as _i4.PostgrestFilterBuilder<dynamic>);
  @override
  _i3.RealtimeChannel channel(
    String? name, {
    _i3.RealtimeChannelConfig? opts = const _i3.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_7(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
        returnValueForMissingStub: _FakeRealtimeChannel_7(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i3.RealtimeChannel);
  @override
  List<_i3.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i3.RealtimeChannel>[],
        returnValueForMissingStub: <_i3.RealtimeChannel>[],
      ) as List<_i3.RealtimeChannel>);
  @override
  _i9.Future<String> removeChannel(_i3.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i9.Future<String>.value(''),
        returnValueForMissingStub: _i9.Future<String>.value(''),
      ) as _i9.Future<String>);
  @override
  _i9.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i9.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i9.Future<List<String>>.value(<String>[]),
      ) as _i9.Future<List<String>>);
  @override
  _i9.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [GoTrueClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoTrueClient extends _i1.Mock implements _i2.GoTrueClient {
  @override
  _i2.GoTrueAdminApi get admin => (super.noSuchMethod(
        Invocation.getter(#admin),
        returnValue: _FakeGoTrueAdminApi_8(
          this,
          Invocation.getter(#admin),
        ),
        returnValueForMissingStub: _FakeGoTrueAdminApi_8(
          this,
          Invocation.getter(#admin),
        ),
      ) as _i2.GoTrueAdminApi);
  @override
  set admin(_i2.GoTrueAdminApi? _admin) => super.noSuchMethod(
        Invocation.setter(
          #admin,
          _admin,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.GoTrueMFAApi get mfa => (super.noSuchMethod(
        Invocation.getter(#mfa),
        returnValue: _FakeGoTrueMFAApi_9(
          this,
          Invocation.getter(#mfa),
        ),
        returnValueForMissingStub: _FakeGoTrueMFAApi_9(
          this,
          Invocation.getter(#mfa),
        ),
      ) as _i2.GoTrueMFAApi);
  @override
  set mfa(_i2.GoTrueMFAApi? _mfa) => super.noSuchMethod(
        Invocation.setter(
          #mfa,
          _mfa,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Stream<_i2.AuthState> get onAuthStateChange => (super.noSuchMethod(
        Invocation.getter(#onAuthStateChange),
        returnValue: _i9.Stream<_i2.AuthState>.empty(),
        returnValueForMissingStub: _i9.Stream<_i2.AuthState>.empty(),
      ) as _i9.Stream<_i2.AuthState>);
  @override
  _i9.Future<_i2.AuthResponse> signUp({
    String? email,
    String? phone,
    required String? password,
    String? emailRedirectTo,
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #emailRedirectTo: emailRedirectTo,
            #data: data,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #signUp,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #emailRedirectTo: emailRedirectTo,
              #data: data,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
  @override
  _i9.Future<_i2.AuthResponse> signInWithPassword({
    String? email,
    String? phone,
    required String? password,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithPassword,
          [],
          {
            #email: email,
            #phone: phone,
            #password: password,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #signInWithPassword,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #signInWithPassword,
            [],
            {
              #email: email,
              #phone: phone,
              #password: password,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
  @override
  _i9.Future<_i2.OAuthResponse> getOAuthSignInUrl({
    required _i2.Provider? provider,
    String? redirectTo,
    String? scopes,
    Map<String, String>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOAuthSignInUrl,
          [],
          {
            #provider: provider,
            #redirectTo: redirectTo,
            #scopes: scopes,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i9.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_11(
          this,
          Invocation.method(
            #getOAuthSignInUrl,
            [],
            {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.OAuthResponse>.value(_FakeOAuthResponse_11(
          this,
          Invocation.method(
            #getOAuthSignInUrl,
            [],
            {
              #provider: provider,
              #redirectTo: redirectTo,
              #scopes: scopes,
              #queryParams: queryParams,
            },
          ),
        )),
      ) as _i9.Future<_i2.OAuthResponse>);
  @override
  _i9.Future<void> signInWithOtp({
    String? email,
    String? phone,
    String? emailRedirectTo,
    bool? shouldCreateUser,
    Map<String, dynamic>? data,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithOtp,
          [],
          {
            #email: email,
            #phone: phone,
            #emailRedirectTo: emailRedirectTo,
            #shouldCreateUser: shouldCreateUser,
            #data: data,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.AuthResponse> verifyOTP({
    String? email,
    String? phone,
    required String? token,
    required _i2.OtpType? type,
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOTP,
          [],
          {
            #email: email,
            #phone: phone,
            #token: token,
            #type: type,
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #verifyOTP,
            [],
            {
              #email: email,
              #phone: phone,
              #token: token,
              #type: type,
              #redirectTo: redirectTo,
              #captchaToken: captchaToken,
            },
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
  @override
  _i9.Future<_i2.AuthResponse> refreshSession() => (super.noSuchMethod(
        Invocation.method(
          #refreshSession,
          [],
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #refreshSession,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #refreshSession,
            [],
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
  @override
  _i9.Future<_i2.UserResponse> updateUser(_i2.UserAttributes? attributes) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [attributes],
        ),
        returnValue: _i9.Future<_i2.UserResponse>.value(_FakeUserResponse_12(
          this,
          Invocation.method(
            #updateUser,
            [attributes],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.UserResponse>.value(_FakeUserResponse_12(
          this,
          Invocation.method(
            #updateUser,
            [attributes],
          ),
        )),
      ) as _i9.Future<_i2.UserResponse>);
  @override
  _i9.Future<_i2.AuthResponse> setSession(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSession,
          [refreshToken],
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #setSession,
            [refreshToken],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #setSession,
            [refreshToken],
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
  @override
  _i9.Future<_i2.AuthSessionUrlResponse> getSessionFromUrl(
    Uri? originUrl, {
    bool? storeSession = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSessionFromUrl,
          [originUrl],
          {#storeSession: storeSession},
        ),
        returnValue: _i9.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_13(
          this,
          Invocation.method(
            #getSessionFromUrl,
            [originUrl],
            {#storeSession: storeSession},
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i2.AuthSessionUrlResponse>.value(
            _FakeAuthSessionUrlResponse_13(
          this,
          Invocation.method(
            #getSessionFromUrl,
            [originUrl],
            {#storeSession: storeSession},
          ),
        )),
      ) as _i9.Future<_i2.AuthSessionUrlResponse>);
  @override
  _i9.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> resetPasswordForEmail(
    String? email, {
    String? redirectTo,
    String? captchaToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPasswordForEmail,
          [email],
          {
            #redirectTo: redirectTo,
            #captchaToken: captchaToken,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<_i2.AuthResponse> recoverSession(String? jsonStr) =>
      (super.noSuchMethod(
        Invocation.method(
          #recoverSession,
          [jsonStr],
        ),
        returnValue: _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #recoverSession,
            [jsonStr],
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i2.AuthResponse>.value(_FakeAuthResponse_10(
          this,
          Invocation.method(
            #recoverSession,
            [jsonStr],
          ),
        )),
      ) as _i9.Future<_i2.AuthResponse>);
}
